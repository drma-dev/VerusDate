@inherits BaseCustomField<string>

<Field Horizontal="true">
    <FieldLabel ColumnSize="ColumnSize.IsFull.OnWidescreen.Is4.OnFullHD">
        <Icon Name="@CssIcon"></Icon> @Label
        @if (!string.IsNullOrEmpty(AttributeHelper.GetDescription(For)))
        {
            <FieldHelp Style="color: #17a2b8 !important">@AttributeHelper.GetDescription(For)</FieldHelp>
        }
    </FieldLabel>

    <FieldBody ColumnSize="ColumnSize.IsFull.OnWidescreen.Is8.OnFullHD">
        @switch (Type)
        {
            case FieldType.TextEdit:
                <InputText Value="@Value" ValueChanged="@SetValue" ValueExpression="@For" @attributes="@GetAttributes(For, disabled: Disabled)"></InputText>
                break;

            case FieldType.MemoEdit:
                <InputTextArea Value="@Value" ValueChanged="@SetValue" ValueExpression="@For" @attributes="@GetAttributes(For, true, Disabled)"></InputTextArea>
                break;

            default:
                break;
        }
        <ValidationMessage For="@For"></ValidationMessage>
    </FieldBody>
</Field>