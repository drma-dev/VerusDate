@inherits ComponenteCore<NavMenu>
@inject HttpClient Http

<Bar Mode="BarMode.VerticalInline" CollapseMode="BarCollapseMode.Hide" Breakpoint="Breakpoint.Desktop" NavigationBreakpoint="Breakpoint.Tablet" Display="Display.None.Block.OnDesktop" Background="Background.Dark" ThemeContrast="ThemeContrast.Dark">
    <BarBrand>
        <BarItem>
            <BarLink To="">
                <BarIcon IconName="IconName.Heart" />
                Verus Date
            </BarLink>
        </BarItem>
    </BarBrand>
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/" Match="Match.All">
                    <BarIcon IconName="Blazorise.Icons.FontAwesome.FontAwesomeIcons.ThLarge" /> Home
                </BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/Profile" Match="Match.Prefix">
                    <BarIcon IconName="Blazorise.Icons.FontAwesome.FontAwesomeIcons.AddressCard" /> Perfil
                </BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/Explore" Match="Match.Prefix">
                    <BarIcon IconName="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Search" /> Explorar
                </BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/Event" Match="Match.Prefix">
                    <BarIcon IconName="Blazorise.Icons.FontAwesome.FontAwesomeIcons.CalendarAlt" /> Eventos
                </BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/Store" Match="Match.Prefix">
                    <BarIcon IconName="Blazorise.Icons.FontAwesome.FontAwesomeIcons.ShoppingCart" /> Loja
                </BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/Support" Match="Match.Prefix">
                    <BarIcon IconName="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Bug" /> Suporte
                </BarLink>
            </BarItem>
        </BarStart>
    </BarMenu>
</Bar>

@code {
    private string MainPhoto = ImageHelper.GetNoUserPhoto;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadData();

        //RefreshCore.RefreshRequestedMenu += Refresh;
    }

    //private async Task Refresh()
    //{
    //    await LoadData();
    //    StateHasChanged();
    //}

    protected async Task LoadData()
    {
        if (ComponenteUtils.IsAuthenticated)
        {
            var profile = await Http.Profile_Get(SessionStorage);

            if (profile != null)
            {
                MainPhoto = profile.GetMainPhoto();
            }
        }
    }
}