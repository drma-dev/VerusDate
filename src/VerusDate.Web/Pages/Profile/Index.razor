@page "/Profile"
@attribute [Authorize]
@inherits PageCore<Profile.Index>
@inject HttpClient Http

<Row>
    <Column ColumnSize="ColumnSize.Is3.OnDesktop">
        <Card Margin="Margin.Is3.FromBottom">
            <CardImage Source="@profile.GetMainPhoto()"></CardImage>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Block="true" Type="ButtonType.Link" To="ProfileData">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.UserEdit"></Icon> Alterar dados
                </Button>
                <Button Color="Color.Primary" Outline="true" Block="true" Type="ButtonType.Link" To="ProfileSearchCriteria">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Users"></Icon> Alterar Busca
                </Button>
                <Button Color="Color.Primary" Outline="true" Block="true" Type="ButtonType.Link" To="ProfileGallery">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Images"></Icon> Fotos
                </Button>
                <Button Color="Color.Primary" Outline="true" Block="true" Type="ButtonType.Link" To="Profile/Account">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.UserCog"></Icon> Conta
                </Button>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is9.OnDesktop">
        <Card Margin="Margin.Is3.FromBottom">
            <CardHeader>Destaques</CardHeader>
            <CardBody>
                @*<ProfileBadge Type="@badge?.Rank"></ProfileBadge>
                    <ProfileBadge Type="@badge?.Seniority"></ProfileBadge>
                    <ProfileBadge Type="@badge?.CompletedProfile"></ProfileBadge>
                    <ProfileBadge Type="@badge?.VerifiedProfile"></ProfileBadge>
                    <ProfileBadge Type="@badge?.Popular"></ProfileBadge>*@
            </CardBody>
        </Card>
        <Card Margin="Margin.Is3.FromBottom">
            <CardBody>
                <Button Color="Color.Primary" Type="ButtonType.Link" To="ProfileChatList" title="ver caixa de mensagens" Disabled="true">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Comments"></Icon> Mensagens
                    <Badge Color="Color.Light">@GlobalInteractionsVM?.TotalMessages</Badge>
                    <Badge Color="Color.Danger">@GlobalInteractionsVM?.UnreadMessages</Badge>
                </Button>
                <Button Color="Color.Primary" Type="ButtonType.Link" To="ProfileInteractions" title="ver likes recebidos" Disabled="true">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.ThumbsUp"></Icon> Likes
                    <Badge Color="Color.Light">@GlobalInteractionsVM?.TotalLikes</Badge>
                </Button>
                <Button Color="Color.Primary" Type="ButtonType.Link" To="ProfileInteractions" title="ver piscadinhas recebidas" Disabled="true">
                    <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.KissWinkHeart"></Icon> Piscadinhas
                    <Badge Color="Color.Light">@GlobalInteractionsVM?.TotalBlinks</Badge>
                </Button>
            </CardBody>
        </Card>
    </Column>
</Row>

@code {

    private VerusDate.Shared.Model.Profile.ProfileGamification gamification;
    private VerusDate.Shared.Model.Profile.ProfileBadge badge;
    private VerusDate.Shared.ModelQuery.GlobalInteractions GlobalInteractionsVM;
    private VerusDate.Shared.Model.Profile.Profile profile = new();

    protected override async Task LoadData()
    {
        gamification = await Http.Gamification_Get(LocalStorage);
        //badge = await Http.Badge_Get(LocalStorage);
        GlobalInteractionsVM = await Http.GlobalInteractions_Get(LocalStorage);
        profile = await Http.Profile_Get();
    }
}