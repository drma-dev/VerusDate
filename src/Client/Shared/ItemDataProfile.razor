@using System.Linq.Expressions;

<span class="@GetClassAffinity(AttributeHelper.GetNameOf(For))" title="@Value.GetDescription()">
    <i class="@ClassIcon"></i>  @GetValue()@if (!string.IsNullOrEmpty(@Value.GetDescription()))
    {  <i class="fas fa-info-circle"></i>}
</span>

@code {
    [Parameter] public Expression<Func<object>> For { get; set; }
    [Parameter] public Enum Value { get; set; }
    [Parameter] public string ClassIcon { get; set; }
    [Parameter] public List<AffinityVM> Affinities { get; set; }

    private string Title => AttributeHelper.GetName(For);

    private string GetClassAffinity(string field)
    {
        if (!Affinities.Any(s => s.AttributeName == field)) return "label label-secondary";

        if (Affinities.Single(s => s.AttributeName == field).HaveAffinity)
        {
            return "label label-primary";
        }
        else
        {
            return "label label-danger";
        }
    }

    private string GetValue()
    {
        if (Value == null)
            return "Não Respondido";
        else
            return Value.GetName();
    }
}